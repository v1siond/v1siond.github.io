{"version":3,"sources":["webpack:///./src/graphql/Mutations.ts","webpack:///./node_modules/@vue/babel-helper-vue-jsx-merge-props/dist/helper.js","webpack:///./src/templates/components/editorTabPanel.tsx","webpack:///./src/templates/pages/newPost.tsx","webpack:///./src/pages/NewPost.tsx"],"names":["Mutations","graphql_tag__WEBPACK_IMPORTED_MODULE_3___default","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_extends","Object","assign","a","b","c","arguments","length","d","prototype","hasOwnProperty","call","apply","this","normalMerge","toArrayMerge","functionalMerge","mergeJsxProps","reduce","indexOf","Array","e","concat","f","g","h","i","mergeFn","module","exports","__webpack_exports__","functional","render","_ref","props","children","class","preview","on","click","showPreview","showEditor","newPost","data","getLogin","editorTabPanel","attrs","methods","NewPost_Mutations","NewPost_NewPost","_Vue","NewPost","_this","classCallCheck","postBody","inherits","createClass","key","value","result","createPost","$router","push","id","threadId","error","console","log","_this2","$apollo","mutate","variables","body","mutation","then","postSuccess","catch","graphQLErrors","postError","alert","_this3","setTitle","setBack","objectSpread","$props","$data","helper_default","input","$event","target","composing","placeholder","domProps","directives","name","modifiers","vue_property_decorator","tslib_es6","lib","vue_class_component_common_default","components","VueMarkdown","vue_markdown_common_default"],"mappings":"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","file":"js/chunk-2b9b0088.76cad8d8.js","sourcesContent":["import gql from 'graphql-tag';\r\nexport default class Mutations {\r\n    // Users\r\n    authenticate() {\r\n        return gql `\r\n      mutation authenticate($email: String!, $password: String!) {\r\n        authenticate(email: $email, password: $password)\r\n      }\r\n    `;\r\n    }\r\n    createUser() {\r\n        return gql `\r\n      mutation createUser($name: String!, $username: String!, $email: String!, $password: String!) {\r\n        createUser(\r\n          name: $name,\r\n          username: $username,\r\n          email: $email,\r\n          password: $password\r\n        ) {\r\n          id\r\n          username\r\n          email\r\n        }\r\n      }\r\n    `;\r\n    }\r\n    // Categories\r\n    createCategory() {\r\n        return gql `\r\n      mutation createCategory($title: String!) {\r\n        createCategory(title: $title) {\r\n          id\r\n          title\r\n        }\r\n      }\r\n    `;\r\n    }\r\n    // Threads\r\n    createThread() {\r\n        return gql `\r\n      mutation createThread($title: String!, $id: ID!, $body: String!) {\r\n        createThread(title: $title, categoryId: $id, body: $body) {\r\n          id\r\n          title\r\n        }\r\n      }\r\n    `;\r\n    }\r\n    // Posts\r\n    createPost() {\r\n        return gql `\r\n      mutation ccreatePost($body: String!, $id: ID!) {\r\n        createPost(body: $body, threadId: $id) {\r\n          id\r\n        }\r\n      }\r\n    `;\r\n    }\r\n}\r\n","\"use strict\";function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}var normalMerge=[\"attrs\",\"props\",\"domProps\"],toArrayMerge=[\"class\",\"style\",\"directives\"],functionalMerge=[\"on\",\"nativeOn\"],mergeJsxProps=function(a){return a.reduce(function(c,a){for(var b in a)if(!c[b])c[b]=a[b];else if(-1!==normalMerge.indexOf(b))c[b]=_extends({},c[b],a[b]);else if(-1!==toArrayMerge.indexOf(b)){var d=c[b]instanceof Array?c[b]:[c[b]],e=a[b]instanceof Array?a[b]:[a[b]];c[b]=d.concat(e)}else if(-1!==functionalMerge.indexOf(b)){for(var f in a[b])if(c[b][f]){var g=c[b][f]instanceof Array?c[b][f]:[c[b][f]],h=a[b][f]instanceof Array?a[b][f]:[a[b][f]];c[b][f]=g.concat(h)}else c[b][f]=a[b][f];}else if(\"hook\"==b)for(var i in a[b])c[b][i]=c[b][i]?mergeFn(c[b][i],a[b][i]):a[b][i];else c[b]=a[b];return c},{})},mergeFn=function(a,b){return function(){a&&a.apply(this,arguments),b&&b.apply(this,arguments)}};module.exports=mergeJsxProps;\n","\r\nexport default ({ props, children }: any) => {\r\n\r\n  return (\r\n    <ul class='tab-panel'>\r\n      <li\r\n        class={`tab ${!props.preview && 'active'}`}\r\n        onClick={() => props.showPreview()}\r\n      >\r\n        <h3>Editor</h3>\r\n      </li>\r\n      <li\r\n        class={`tab ${props.preview && 'active'}`}\r\n        onClick={() => props.showEditor()}\r\n      >\r\n        <h3>Preview</h3>\r\n      </li>\r\n    </ul>\r\n  )\r\n}\r\n","import Toolbar from '../../components/Toolbar'\r\nimport TabPanel from '../components/editorTabPanel'\r\n\r\nexport default ({ props, children }: any) => {\r\n  if (props.data.getLogin) {\r\n    return (\r\n      <main class='section new-post'>\r\n        <TabPanel\r\n          preview={props.data.preview}\r\n          showPreview={props.methods.showPreview}\r\n          showEditor={props.methods.showEditor}\r\n        />\r\n        {children}\r\n      </main>\r\n    )\r\n  } else {\r\n    return <div>You must be logged to perform this action.</div>\r\n  }\r\n}\r\n","import { Vue } from 'vue-property-decorator'\r\nimport VueMarkdown from 'vue-markdown'\r\nimport Component from 'vue-class-component'\r\nimport MutationList from '../graphql/Mutations'\r\nimport { Prop } from 'vue-property-decorator'\r\nimport { Getter, Mutation } from 'vuex-class'\r\nimport NewPostTemplate from '../templates/pages/newPost'\r\nconst Mutations = new MutationList()\r\n\r\n@Component({\r\n  name: 'newPost',\r\n  components: {\r\n    VueMarkdown\r\n  }\r\n})\r\nexport default class NewPost extends Vue {\r\n  @Prop()\r\n  threadId!: string\r\n  @Prop()\r\n  id!: string\r\n  @Getter('getLogin') getLogin: any\r\n  @Mutation('setTitle') setTitle\r\n  @Mutation('setBack') setBack\r\n  postBody: string = ''\r\n  preview: boolean = false\r\n\r\n  postSuccess (result: any) {\r\n    if (result.data.createPost) {\r\n      this.$router.push(`/blog/categories/${this.id}/threads/${this.threadId}`)\r\n    }\r\n  }\r\n\r\n  postError (error: any) {\r\n    console.log(error)\r\n  }\r\n\r\n  getPostBody (postBody) {\r\n    this.postBody = postBody\r\n  }\r\n\r\n  showPreview () {\r\n    this.preview = false\r\n  }\r\n\r\n  showEditor () {\r\n    this.preview = true\r\n  }\r\n\r\n  mutate () {\r\n    if (this.postBody !== '') {\r\n      this.$apollo.mutate({\r\n        variables: {\r\n          body: this.postBody,\r\n          id: this.threadId\r\n        },\r\n        mutation: Mutations.createPost()\r\n      })\r\n      .then((result) => {\r\n        if (result.data.createPost) {\r\n          this.postSuccess(result)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.graphQLErrors) {\r\n          this.postError(error)\r\n        }\r\n      })\r\n    } else {\r\n      alert(`Post can't be blank`)\r\n    }\r\n  }\r\n\r\n  render (h: any) {\r\n    this.setTitle('New Post')\r\n    this.setBack(true)\r\n    return (\r\n      <NewPostTemplate\r\n        data={{\r\n          ...this.$props,\r\n          ...this.$data,\r\n          getLogin: this.getLogin\r\n        }}\r\n        methods={{\r\n          showPreview: this.showPreview,\r\n          showEditor: this.showEditor\r\n        }}\r\n      >\r\n        {!this.preview ? (\r\n          <div class='thread-comment-box'>\r\n            <textarea\r\n              class='textarea'\r\n              id='postBody'\r\n              placeholder='Please be friendly...'\r\n              vModel={this.postBody}\r\n            />\r\n            <button\r\n              class='pure-button -fixed pure-button-primary input'\r\n              onClick={() => this.mutate()}\r\n            >\r\n              New Post\r\n            </button>\r\n          </div>\r\n        ) : (\r\n            <vue-markdown class='markdown-style -padding'>\r\n              {this.postBody}\r\n            </vue-markdown>\r\n          )}\r\n      </NewPostTemplate>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}